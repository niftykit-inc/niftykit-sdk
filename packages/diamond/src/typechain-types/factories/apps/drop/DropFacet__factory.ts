/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DropFacet,
  DropFacetInterface,
} from "../../../contracts/apps/drop/DropFacet";

const _abi = [
  {
    inputs: [],
    name: "NewOwnerIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandoverRequest",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roles",
        type: "uint256",
      },
    ],
    name: "RolesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "airdropFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64[]",
        name: "quantities",
        type: "uint64[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
    ],
    name: "batchAirdrop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "displayPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dropRevenue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "quantity",
        type: "uint64",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "quantity",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "allowed",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "presaleMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxPerMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxPerWallet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "presale",
        type: "bool",
      },
    ],
    name: "startSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a8e806100206000396000f3fe6080604052600436106100f35760003560e01c8063789e3a551161008a578063a035b1fe11610059578063a035b1fe146102d7578063d53ab501146102ec578063e36b0b37146102ff578063fd51fae81461031457600080fd5b8063789e3a551461026d5780637cb647591461028f57806393d756aa146102af57806398624455146102c257600080fd5b806353135ca0116100c657806353135ca0146101aa5780635541c605146101db5780635f48f3931461020f57806368428a1b1461024357600080fd5b806313966db5146100f857806335b69a3f14610120578063453c231014610142578063507e094f14610176575b600080fd5b34801561010457600080fd5b5061010d610327565b6040519081526020015b60405180910390f35b34801561012c57600080fd5b506000805160206119f98339815191525461010d565b34801561014e57600080fd5b507f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907d5461010d565b34801561018257600080fd5b507f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907c5461010d565b3480156101b657600080fd5b50600080516020611a198339815191525460ff165b6040519015158152602001610117565b3480156101e757600080fd5b507f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907a5461010d565b34801561021b57600080fd5b507f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907b5461010d565b34801561024f57600080fd5b50600080516020611a1983398151915254610100900460ff166101cb565b34801561027957600080fd5b5061028d6102883660046115b2565b6103c8565b005b34801561029b57600080fd5b5061028d6102aa366004611604565b610477565b61028d6102bd36600461164e565b6104a7565b3480156102ce57600080fd5b5061010d6106c9565b3480156102e357600080fd5b5061010d61076f565b61028d6102fa3660046116ce565b61082d565b34801561030b57600080fd5b5061028d610b1b565b61028d610322366004611739565b610b41565b6000805160206119b98339815191525460408051630317c2dd60e01b81526001600482015281516000936201000090046001600160a01b031692849283928592630317c2dd92602480820193918290030181865afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b191906117a9565b90925090506103c081836117e3565b935050505090565b60026103d381610e2b565b50600080516020611a19833981519152805491151561ffff19909216919091176101001790557f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907b939093557f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907c919091557f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907d556000805160206119f983398151915255565b600261048281610e2b565b507f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907955565b80600080516020611a398339815191526001600160401b0382166105025760405162461bcd60e51b815260206004820152600d60248201526c05175616e74697479206973203609c1b60448201526064015b60405180910390fd5b8060040154826001600160401b031611156105575760405162461bcd60e51b8152602060048201526015602482015274115e18d959591959081b585e081c195c881b5a5b9d605a1b60448201526064016104f9565b6000816003015411801561058957508060030154826001600160401b031661057d610e61565b61058791906117e3565b115b156105cc5760405162461bcd60e51b81526020600482015260136024820152724578636565646564206d617820737570706c7960681b60448201526064016104f9565b600080516020611a1983398151915254600080516020611a398339815191529060ff161561062d5760405162461bcd60e51b815260206004820152600e60248201526d50726573616c652061637469766560901b60448201526064016104f9565b6007810154610100900460ff166106785760405162461bcd60e51b815260206004820152600f60248201526e53616c65206e6f742061637469766560881b60448201526064016104f9565b80600501548461068787610e9b565b61069191906117f6565b6001600160401b031611156106b85760405162461bcd60e51b81526004016104f99061181d565b6106c28486610ed8565b5050505050565b6000805160206119b98339815191525460408051630317c2dd60e01b81526001600482015281516000936201000090046001600160a01b031692849283928592630317c2dd92602480820193918290030181865afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075391906117a9565b915091506000811161076557816103c0565b6000935050505090565b6000805160206119b9833981519152546000805160206119f98339815191525460408051630317c2dd60e01b81526001600482015281516000946201000090046001600160a01b03169392859283928692630317c2dd92602480820193918290030181865afa1580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080a91906117a9565b90925090508061081a83856117e3565b61082491906117e3565b94505050505090565b600261083881610e2b565b8184811461087c5760405162461bcd60e51b8152602060048201526011602482015270496e76616c696420417267756d656e747360781b60448201526064016104f9565b6000805b8281101561091a576108e786868381811061089d5761089d611854565b90506020020160208101906108b2919061186a565b8989848181106108c4576108c4611854565b90506020020160208101906108d99190611887565b6001600160401b0316611114565b8787828181106108f9576108f9611854565b905060200201602081019061090e9190611887565b90910190600101610880565b5060007f45f38af8fd646bf817698fe2be76218d850d401ba88ffd7c9cd1b4f5c9a1db5660040160029054906101000a90046001600160a01b031690506000816001600160a01b031663788914d0306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca91906118a2565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3291906118bf565b6bffffffffffffffffffffffff161115610a4e575050506106c2565b604051630317c2dd60e01b81526001600160401b03831660048201526000906001600160a01b03831690630317c2dd906024016040805180830381865afa158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac191906117a9565b50905034811115610b065760405162461bcd60e51b815260206004820152600f60248201526e15985b1d59481a5b98dbdc9c9958dd608a1b60448201526064016104f9565b610b108282611132565b505050505050505050565b6002610b2681610e2b565b50600080516020611a19833981519152805461ffff19169055565b83600080516020611a398339815191526001600160401b038216610b975760405162461bcd60e51b815260206004820152600d60248201526c05175616e74697479206973203609c1b60448201526064016104f9565b8060040154826001600160401b03161115610bec5760405162461bcd60e51b8152602060048201526015602482015274115e18d959591959081b585e081c195c881b5a5b9d605a1b60448201526064016104f9565b60008160030154118015610c1e57508060030154826001600160401b0316610c12610e61565b610c1c91906117e3565b115b15610c615760405162461bcd60e51b81526020600482015260136024820152724578636565646564206d617820737570706c7960681b60448201526064016104f9565b600080516020611a39833981519152600087610c7c8a610e9b565b610c8691906117f6565b60078301546001600160401b0391909116915060ff16610cdd5760405162461bcd60e51b815260206004820152601260248201527150726573616c65206e6f742061637469766560701b60448201526064016104f9565b8160010154600003610d235760405162461bcd60e51b815260206004820152600f60248201526e141c995cd85b19481b9bdd081cd95d608a1b60448201526064016104f9565b8160050154811115610d475760405162461bcd60e51b81526004016104f99061181d565b86811115610d675760405162461bcd60e51b81526004016104f99061181d565b610de386868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060018401546040516bffffffffffffffffffffffff1960608e901b166020820152603481018b905260540160405160208183030381529060405280519060200120611250565b610e215760405162461bcd60e51b815260206004820152600f60248201526e141c995cd85b19481a5b9d985b1a59608a1b60448201526064016104f9565b610b10888a610ed8565b638b78c6d8600c5233600052806020600c205416610e5e57638b78c6d819543314610e5e576382b429006000526004601cfd5b50565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c41546000805160206119d983398151915254036000190190565b6001600160a01b031660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45602052604090205460c01c90565b6000805160206119b9833981519152546000805160206119f983398151915254620100009091046001600160a01b031690600080516020611a3983398151915290600090610f30906001600160401b038716906118ed565b604051630317c2dd60e01b81526001600160401b038716600482015290915060009081906001600160a01b03861690630317c2dd906024016040805180830381865afa158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa891906117a9565b90925090503481610fb984866117e3565b610fc391906117e3565b11156110035760405162461bcd60e51b815260206004820152600f60248201526e15985b1d59481a5b98dbdc9c9958dd608a1b60448201526064016104f9565b6002840180543401839003829003905561101d8583611132565b801561108e5761108e306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611064573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108891906118a2565b82611132565b6110f8868861109c89610e9b565b6110a691906117f6565b6001600160a01b039190911660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020526040902080546001600160c01b031660c09290921b919091179055565b61110b86886001600160401b0316611266565b50505050505050565b61112e82826040518060200160405280600081525061137d565b5050565b804710156111825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016104f9565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146111cf576040519150601f19603f3d011682016040523d82523d6000602084013e6111d4565b606091505b505090508061124b5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104f9565b505050565b60008261125d85846113f9565b14949350505050565b6000805160206119d983398151915254600082900361128f5761128f63b562e8dd60e01b611448565b60008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602090815260408083206001600160a01b0387164260a01b6001881460e11b1781179091558084527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45909252822080546801000000000000000186020190559081900361132b5761132b622e076360e81b611448565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a481816001019150810361133057506000805160206119d98339815191525550505050565b6113878383611266565b6001600160a01b0383163b1561124b576000805160206119d9833981519152548281035b6113be6000868380600101945086611452565b6113d2576113d26368d2bf6b60e11b611448565b8181106113ab57816000805160206119d983398151915254146106c2576106c26000611448565b600081815b845181101561143e5761142a8286838151811061141d5761141d611854565b602002602001015161153a565b91508061143681611904565b9150506113fe565b5090505b92915050565b8060005260046000fd5b6000836001600160a01b031663150b7a0261146b61156c565b8786866040518563ffffffff1660e01b815260040161148d949392919061191d565b6020604051808303816000875af19250505080156114c8575060408051601f3d908101601f191682019092526114c59181019061198e565b60015b61151d573d8080156114f6576040519150601f19603f3d011682016040523d82523d6000602084013e6114fb565b606091505b508051600003611515576115156368d2bf6b60e11b611448565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6000818310611556576000828152602084905260409020611565565b60008381526020839052604090205b9392505050565b7f45f38af8fd646bf817698fe2be76218d850d401ba88ffd7c9cd1b4f5c9a1db5e546000906001600160a01b031633036115ad575060131936013560601c90565b503390565b600080600080600060a086880312156115ca57600080fd5b85359450602086013593506040860135925060608601359150608086013580151581146115f657600080fd5b809150509295509295909350565b60006020828403121561161657600080fd5b5035919050565b6001600160a01b0381168114610e5e57600080fd5b80356001600160401b038116811461164957600080fd5b919050565b6000806040838503121561166157600080fd5b823561166c8161161d565b915061167a60208401611632565b90509250929050565b60008083601f84011261169557600080fd5b5081356001600160401b038111156116ac57600080fd5b6020830191508360208260051b85010111156116c757600080fd5b9250929050565b600080600080604085870312156116e457600080fd5b84356001600160401b03808211156116fb57600080fd5b61170788838901611683565b9096509450602087013591508082111561172057600080fd5b5061172d87828801611683565b95989497509550505050565b60008060008060006080868803121561175157600080fd5b853561175c8161161d565b945061176a60208701611632565b93506040860135925060608601356001600160401b0381111561178c57600080fd5b61179888828901611683565b969995985093965092949392505050565b600080604083850312156117bc57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b80820180821115611442576114426117cd565b6001600160401b03818116838216019080821115611816576118166117cd565b5092915050565b60208082526017908201527f4578636565646564206d6178207065722077616c6c6574000000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561187c57600080fd5b81356115658161161d565b60006020828403121561189957600080fd5b61156582611632565b6000602082840312156118b457600080fd5b81516115658161161d565b6000602082840312156118d157600080fd5b81516bffffffffffffffffffffffff8116811461156557600080fd5b8082028115828204841417611442576114426117cd565b600060018201611916576119166117cd565b5060010190565b600060018060a01b038087168352602081871681850152856040850152608060608501528451915081608085015260005b8281101561196a5785810182015185820160a00152810161194e565b5050600060a0828501015260a0601f19601f83011684010191505095945050505050565b6000602082840312156119a057600080fd5b81516001600160e01b03198116811461156557600080fdfe45f38af8fd646bf817698fe2be76218d850d401ba88ffd7c9cd1b4f5c9a1db5a2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c408463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907e8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b381569078a26469706673582212202adc62a9ecaeaa6d3a506176f2a21c1e432b226a3885dbd152b126f6d44ffc2864736f6c63430008130033";

type DropFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DropFacet__factory extends ContractFactory {
  constructor(...args: DropFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DropFacet> {
    return super.deploy(overrides || {}) as Promise<DropFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DropFacet {
    return super.attach(address) as DropFacet;
  }
  override connect(signer: Signer): DropFacet__factory {
    return super.connect(signer) as DropFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropFacetInterface {
    return new utils.Interface(_abi) as DropFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DropFacet {
    return new Contract(address, _abi, signerOrProvider) as DropFacet;
  }
}