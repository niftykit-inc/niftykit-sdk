/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20AppFacet,
  ERC20AppFacetInterface,
} from "../../../contracts/apps/erc20/ERC20AppFacet";

const _abi = [
  {
    inputs: [],
    name: "NewOwnerIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandoverRequest",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipHandoverRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roles",
        type: "uint256",
      },
    ],
    name: "RolesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "erc20ActiveCoin",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "erc20CoinByIndex",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20CoinsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20MintFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "quantity",
        type: "uint64",
      },
    ],
    name: "erc20MintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PresaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "quantity",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "allowed",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "erc20PresaleMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "erc20Revenue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20SaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "erc20SetActiveCoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxPerMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxPerWallet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "presale",
        type: "bool",
      },
    ],
    name: "erc20StartSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20StopSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "erc20Withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506119d2806100206000396000f3fe6080604052600436106100dd5760003560e01c8063b694460f1161007f578063d4461d5111610059578063d4461d51146102f4578063f0769c3314610307578063f673e0b71461031a578063fef8ddda1461033a57600080fd5b8063b694460f14610225578063c936b23c1461024a578063d1b022bd1461029f57600080fd5b806356da1506116100bb57806356da15061461017d5780637081ff9b1461019d578063abee801f146101b2578063afab9bb7146101f157600080fd5b806315d11e81146100e25780634adccde5146101045780634fb58bab14610147575b600080fd5b3480156100ee57600080fd5b506101026100fd366004611604565b61034f565b005b34801561011057600080fd5b507fef3ade2c07aeb418fe70a697d77effdb47b5c3ae13994cfb24323e3d2e6a68aa545b6040519081526020015b60405180910390f35b34801561015357600080fd5b5060008051602061193d83398151915254610100900460ff165b604051901515815260200161013e565b34801561018957600080fd5b50610102610198366004611604565b6104b5565b3480156101a957600080fd5b506101346105a5565b3480156101be57600080fd5b5060008051602061195d833981519152546001600160a01b03165b6040516001600160a01b03909116815260200161013e565b3480156101fd57600080fd5b507fef3ade2c07aeb418fe70a697d77effdb47b5c3ae13994cfb24323e3d2e6a68a954610134565b34801561023157600080fd5b5060008051602061193d8339815191525460ff1661016d565b34801561025657600080fd5b50610134610265366004611604565b6001600160a01b031660009081527fef3ade2c07aeb418fe70a697d77effdb47b5c3ae13994cfb24323e3d2e6a68a6602052604090205490565b3480156102ab57600080fd5b506101d96102ba366004611621565b60009081527fef3ade2c07aeb418fe70a697d77effdb47b5c3ae13994cfb24323e3d2e6a68a860205260409020546001600160a01b031690565b610102610302366004611656565b610658565b61010261031536600461168b565b61088b565b34801561032657600080fd5b50610102610335366004611738565b610b97565b34801561034657600080fd5b50610102610c4e565b600161035a81610c74565b6001600160a01b0382811660009081527fef3ade2c07aeb418fe70a697d77effdb47b5c3ae13994cfb24323e3d2e6a68a7602052604090205460008051602061195d8339815191529116806103e95760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590818dbdb9d1c9858dd60821b60448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190611785565b9050600081116104925760405162461bcd60e51b8152602060048201526009602482015268302062616c616e636560b81b60448201526064016103e0565b6104ae61049d610caa565b6001600160a01b0384169083610cf0565b5050505050565b60026104c081610c74565b6001600160a01b0382811660009081527fef3ade2c07aeb418fe70a697d77effdb47b5c3ae13994cfb24323e3d2e6a68a7602052604090205460008051602061195d8339815191529116610571576001600160a01b0383166000818152600283016020908152604080832080546001600160a01b03199081168617909155600486018054855260038701909352908320805490911690931790925581548592909161056a836117b4565b9190505550505b6001600160a01b03928316600090815260028201602052604090205481546001600160a01b03191693169290921790915550565b7f45f38af8fd646bf817698fe2be76218d850d401ba88ffd7c9cd1b4f5c9a1db5a5460408051630317c2dd60e01b81526001600482015281516000936201000090046001600160a01b031692849283928592630317c2dd92602480820193918290030181865afa15801561061d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064191906117cd565b909250905061065081836117f1565b935050505090565b8060008051602061197d8339815191526001600160401b0382166106ae5760405162461bcd60e51b815260206004820152600d60248201526c05175616e74697479206973203609c1b60448201526064016103e0565b8060040154826001600160401b031611156107035760405162461bcd60e51b8152602060048201526015602482015274115e18d959591959081b585e081c195c881b5a5b9d605a1b60448201526064016103e0565b6000816003015411801561073557508060030154826001600160401b0316610729610d58565b61073391906117f1565b115b156107785760405162461bcd60e51b81526020600482015260136024820152724578636565646564206d617820737570706c7960681b60448201526064016103e0565b60008051602061193d8339815191525460008051602061195d83398151915290610100900460ff16156107de5760405162461bcd60e51b815260206004820152600e60248201526d50726573616c652061637469766560901b60448201526064016103e0565b600681015460ff166108245760405162461bcd60e51b815260206004820152600f60248201526e53616c65206e6f742061637469766560881b60448201526064016103e0565b7f8463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b38156907d548461085087610da4565b61085a9190611804565b6001600160401b031611156108815760405162461bcd60e51b81526004016103e09061182b565b6104ae8486610de1565b8360008051602061197d8339815191526001600160401b0382166108e15760405162461bcd60e51b815260206004820152600d60248201526c05175616e74697479206973203609c1b60448201526064016103e0565b8060040154826001600160401b031611156109365760405162461bcd60e51b8152602060048201526015602482015274115e18d959591959081b585e081c195c881b5a5b9d605a1b60448201526064016103e0565b6000816003015411801561096857508060030154826001600160401b031661095c610d58565b61096691906117f1565b115b156109ab5760405162461bcd60e51b81526020600482015260136024820152724578636565646564206d617820737570706c7960681b60448201526064016103e0565b60008051602061197d83398151915260008051602061195d8339815191526000886109d58b610da4565b6109df9190611804565b6001600160401b031690508160060160019054906101000a900460ff16610a3d5760405162461bcd60e51b815260206004820152601260248201527150726573616c65206e6f742061637469766560701b60448201526064016103e0565b8260010154600003610a835760405162461bcd60e51b815260206004820152600f60248201526e141c995cd85b19481b9bdd081cd95d608a1b60448201526064016103e0565b8260050154811115610aa75760405162461bcd60e51b81526004016103e09061182b565b87811115610ac75760405162461bcd60e51b81526004016103e09061182b565b610b4387878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060018501546040516bffffffffffffffffffffffff1960608f901b166020820152603481018c905260540160405160208183030381529060405280519060200120611057565b610b815760405162461bcd60e51b815260206004820152600f60248201526e141c995cd85b19481a5b9d985b1a59608a1b60448201526064016103e0565b610b8b898b610de1565b50505050505050505050565b6002610ba281610c74565b60008051602061195d833981519152805460008051602061197d833981519152906001600160a01b0316610c115760405162461bcd60e51b8152602060048201526016602482015275151bdad95b8810dbdb9d1c9858dd081b9bdd081cd95d60521b60448201526064016103e0565b6006820180549415156101000261ffff19909516949094176001179093556005908101939093555060038101949094556004840192909255910155565b6002610c5981610c74565b5060008051602061193d833981519152805461ffff19169055565b638b78c6d8600c5233600052806020600c205416610ca757638b78c6d819543314610ca7576382b429006000526004601cfd5b50565b7f45f38af8fd646bf817698fe2be76218d850d401ba88ffd7c9cd1b4f5c9a1db5e546000906001600160a01b03163303610ceb575060131936013560601c90565b503390565b6040516001600160a01b038316602482015260448101829052610d5390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261106d565b505050565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c41547f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4054036000190190565b6001600160a01b031660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45602052604090205460c01c90565b7f45f38af8fd646bf817698fe2be76218d850d401ba88ffd7c9cd1b4f5c9a1db5a547fef3ade2c07aeb418fe70a697d77effdb47b5c3ae13994cfb24323e3d2e6a68aa5460008051602061195d833981519152916201000090046001600160a01b031690600090610e5c906001600160401b03871690611862565b604051630317c2dd60e01b81526001600160401b038716600482015290915060009081906001600160a01b03851690630317c2dd906024016040805180830381865afa158015610eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed491906117cd565b909250905034610ee482846117f1565b1115610f245760405162461bcd60e51b815260206004820152600f60248201526e15985b1d59481a5b98dbdc9c9958dd608a1b60448201526064016103e0565b610f2e8483611142565b8015610f9f57610f9f306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f999190611879565b82611142565b84546001600160a01b03908116600090815260018701602052604090208054850190558554610fd1911687308661125b565b61103b8688610fdf89610da4565b610fe99190611804565b6001600160a01b039190911660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020526040902080546001600160c01b031660c09290921b919091179055565b61104e86886001600160401b0316611299565b50505050505050565b60008261106485846113d4565b14949350505050565b60006110c2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114239092919063ffffffff16565b90508051600014806110e35750808060200190518101906110e39190611896565b610d535760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103e0565b804710156111925760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103e0565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146111df576040519150601f19603f3d011682016040523d82523d6000602084013e6111e4565b606091505b5050905080610d535760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103e0565b6040516001600160a01b03808516602483015283166044820152606481018290526112939085906323b872dd60e01b90608401610d1c565b50505050565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c405460008290036112d4576112d463b562e8dd60e01b61143a565b60008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602090815260408083206001600160a01b0387164260a01b6001881460e11b1781179091558084527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45909252822080546801000000000000000186020190559081900361137057611370622e076360e81b61143a565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a481816001019150810361137557507f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c405550505050565b600081815b845181101561141957611405828683815181106113f8576113f86118b3565b6020026020010151611444565b915080611411816117b4565b9150506113d9565b5090505b92915050565b60606114328484600085611476565b949350505050565b8060005260046000fd5b600081831061146057600082815260208490526040902061146f565b60008381526020839052604090205b9392505050565b6060824710156114d75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103e0565b600080866001600160a01b031685876040516114f391906118ed565b60006040518083038185875af1925050503d8060008114611530576040519150601f19603f3d011682016040523d82523d6000602084013e611535565b606091505b509150915061154687838387611551565b979650505050505050565b606083156115c05782516000036115b9576001600160a01b0385163b6115b95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e0565b5081611432565b61143283838151156115d55781518083602001fd5b8060405162461bcd60e51b81526004016103e09190611909565b6001600160a01b0381168114610ca757600080fd5b60006020828403121561161657600080fd5b813561146f816115ef565b60006020828403121561163357600080fd5b5035919050565b80356001600160401b038116811461165157600080fd5b919050565b6000806040838503121561166957600080fd5b8235611674816115ef565b91506116826020840161163a565b90509250929050565b6000806000806000608086880312156116a357600080fd5b85356116ae816115ef565b94506116bc6020870161163a565b93506040860135925060608601356001600160401b03808211156116df57600080fd5b818801915088601f8301126116f357600080fd5b81358181111561170257600080fd5b8960208260051b850101111561171757600080fd5b9699959850939650602001949392505050565b8015158114610ca757600080fd5b600080600080600060a0868803121561175057600080fd5b8535945060208601359350604086013592506060860135915060808601356117778161172a565b809150509295509295909350565b60006020828403121561179757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016117c6576117c661179e565b5060010190565b600080604083850312156117e057600080fd5b505080516020909101519092909150565b8082018082111561141d5761141d61179e565b6001600160401b038181168382160190808211156118245761182461179e565b5092915050565b60208082526017908201527f4578636565646564206d6178207065722077616c6c6574000000000000000000604082015260600190565b808202811582820484141761141d5761141d61179e565b60006020828403121561188b57600080fd5b815161146f816115ef565b6000602082840312156118a857600080fd5b815161146f8161172a565b634e487b7160e01b600052603260045260246000fd5b60005b838110156118e45781810151838201526020016118cc565b50506000910152565b600082516118ff8184602087016118c9565b9190910192915050565b60208152600082518060208401526119288160408501602087016118c9565b601f01601f1916919091016040019291505056feef3ade2c07aeb418fe70a697d77effdb47b5c3ae13994cfb24323e3d2e6a68abef3ade2c07aeb418fe70a697d77effdb47b5c3ae13994cfb24323e3d2e6a68a58463ba7c736160ca369a87f3f11bd6c808ec9f1e2f50ab84a0ca42b381569078a26469706673582212204ecf113b072f424189c1f34398dfb9b7c697c88536ce7d43c2576b950ae8141f64736f6c63430008130033";

type ERC20AppFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20AppFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20AppFacet__factory extends ContractFactory {
  constructor(...args: ERC20AppFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20AppFacet> {
    return super.deploy(overrides || {}) as Promise<ERC20AppFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20AppFacet {
    return super.attach(address) as ERC20AppFacet;
  }
  override connect(signer: Signer): ERC20AppFacet__factory {
    return super.connect(signer) as ERC20AppFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20AppFacetInterface {
    return new utils.Interface(_abi) as ERC20AppFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20AppFacet {
    return new Contract(address, _abi, signerOrProvider) as ERC20AppFacet;
  }
}