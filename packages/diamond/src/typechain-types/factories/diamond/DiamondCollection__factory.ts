/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DiamondCollection,
  DiamondCollectionInterface,
} from "../../contracts/diamond/DiamondCollection";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "royalty",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "royaltyBps",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "bytes32[]",
        name: "apps",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type DiamondCollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCollection__factory extends ContractFactory {
  constructor(...args: DiamondCollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: PromiseOrValue<string>,
    treasury: PromiseOrValue<string>,
    royalty: PromiseOrValue<string>,
    royaltyBps: PromiseOrValue<BigNumberish>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    apps: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCollection> {
    return super.deploy(
      owner,
      treasury,
      royalty,
      royaltyBps,
      name,
      symbol,
      apps,
      overrides || {}
    ) as Promise<DiamondCollection>;
  }
  override getDeployTransaction(
    owner: PromiseOrValue<string>,
    treasury: PromiseOrValue<string>,
    royalty: PromiseOrValue<string>,
    royaltyBps: PromiseOrValue<BigNumberish>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    apps: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      treasury,
      royalty,
      royaltyBps,
      name,
      symbol,
      apps,
      overrides || {}
    );
  }
  override attach(address: string): DiamondCollection {
    return super.attach(address) as DiamondCollection;
  }
  override connect(signer: Signer): DiamondCollection__factory {
    return super.connect(signer) as DiamondCollection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCollectionInterface {
    return new utils.Interface(_abi) as DiamondCollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCollection {
    return new Contract(address, _abi, signerOrProvider) as DiamondCollection;
  }
}
