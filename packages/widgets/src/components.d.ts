/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface NkConnectWalletButton {
    }
    interface NkDiamond {
        "collectionId": string;
        "isDev"?: boolean;
    }
    interface NkDropMintButton {
        "mint": (quantity: number) => Promise<void>;
        "successMessage": string;
        "successTitle": string;
    }
    interface NkDropSupplyText {
    }
    interface NkIsConnected {
    }
    interface NkIsNotConnected {
    }
    interface NkLoading {
    }
}
declare global {
    interface HTMLNkConnectWalletButtonElement extends Components.NkConnectWalletButton, HTMLStencilElement {
    }
    var HTMLNkConnectWalletButtonElement: {
        prototype: HTMLNkConnectWalletButtonElement;
        new (): HTMLNkConnectWalletButtonElement;
    };
    interface HTMLNkDiamondElement extends Components.NkDiamond, HTMLStencilElement {
    }
    var HTMLNkDiamondElement: {
        prototype: HTMLNkDiamondElement;
        new (): HTMLNkDiamondElement;
    };
    interface HTMLNkDropMintButtonElement extends Components.NkDropMintButton, HTMLStencilElement {
    }
    var HTMLNkDropMintButtonElement: {
        prototype: HTMLNkDropMintButtonElement;
        new (): HTMLNkDropMintButtonElement;
    };
    interface HTMLNkDropSupplyTextElement extends Components.NkDropSupplyText, HTMLStencilElement {
    }
    var HTMLNkDropSupplyTextElement: {
        prototype: HTMLNkDropSupplyTextElement;
        new (): HTMLNkDropSupplyTextElement;
    };
    interface HTMLNkIsConnectedElement extends Components.NkIsConnected, HTMLStencilElement {
    }
    var HTMLNkIsConnectedElement: {
        prototype: HTMLNkIsConnectedElement;
        new (): HTMLNkIsConnectedElement;
    };
    interface HTMLNkIsNotConnectedElement extends Components.NkIsNotConnected, HTMLStencilElement {
    }
    var HTMLNkIsNotConnectedElement: {
        prototype: HTMLNkIsNotConnectedElement;
        new (): HTMLNkIsNotConnectedElement;
    };
    interface HTMLNkLoadingElement extends Components.NkLoading, HTMLStencilElement {
    }
    var HTMLNkLoadingElement: {
        prototype: HTMLNkLoadingElement;
        new (): HTMLNkLoadingElement;
    };
    interface HTMLElementTagNameMap {
        "nk-connect-wallet-button": HTMLNkConnectWalletButtonElement;
        "nk-diamond": HTMLNkDiamondElement;
        "nk-drop-mint-button": HTMLNkDropMintButtonElement;
        "nk-drop-supply-text": HTMLNkDropSupplyTextElement;
        "nk-is-connected": HTMLNkIsConnectedElement;
        "nk-is-not-connected": HTMLNkIsNotConnectedElement;
        "nk-loading": HTMLNkLoadingElement;
    }
}
declare namespace LocalJSX {
    interface NkConnectWalletButton {
    }
    interface NkDiamond {
        "collectionId": string;
        "isDev"?: boolean;
    }
    interface NkDropMintButton {
        "successMessage"?: string;
        "successTitle"?: string;
    }
    interface NkDropSupplyText {
    }
    interface NkIsConnected {
    }
    interface NkIsNotConnected {
    }
    interface NkLoading {
    }
    interface IntrinsicElements {
        "nk-connect-wallet-button": NkConnectWalletButton;
        "nk-diamond": NkDiamond;
        "nk-drop-mint-button": NkDropMintButton;
        "nk-drop-supply-text": NkDropSupplyText;
        "nk-is-connected": NkIsConnected;
        "nk-is-not-connected": NkIsNotConnected;
        "nk-loading": NkLoading;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "nk-connect-wallet-button": LocalJSX.NkConnectWalletButton & JSXBase.HTMLAttributes<HTMLNkConnectWalletButtonElement>;
            "nk-diamond": LocalJSX.NkDiamond & JSXBase.HTMLAttributes<HTMLNkDiamondElement>;
            "nk-drop-mint-button": LocalJSX.NkDropMintButton & JSXBase.HTMLAttributes<HTMLNkDropMintButtonElement>;
            "nk-drop-supply-text": LocalJSX.NkDropSupplyText & JSXBase.HTMLAttributes<HTMLNkDropSupplyTextElement>;
            "nk-is-connected": LocalJSX.NkIsConnected & JSXBase.HTMLAttributes<HTMLNkIsConnectedElement>;
            "nk-is-not-connected": LocalJSX.NkIsNotConnected & JSXBase.HTMLAttributes<HTMLNkIsNotConnectedElement>;
            "nk-loading": LocalJSX.NkLoading & JSXBase.HTMLAttributes<HTMLNkLoadingElement>;
        }
    }
}
